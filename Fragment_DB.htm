

$+
SetVar(fdb_chooser, 
    "Choose the desired fragment from the list in the drop-down menu. 
    <br>
    ~Searching~
    <br>
    Do an unsharp search with a partial name and *hit enter key*. 
    <br>
    For example a search for cf3 finds all the fragments containing cf3 in their 
    name and similar. <br>
    The search results in a shortened drop down menue.
    <br>
    ~Reset~
    <br>
    The reset button restores the full fragment list after a search.
    <br>
    ~User Defined Database~
    <br>
    The main database is write protected, but you can add and change as many 
    fragments you like. They will be stored in a separate database. The user 
    database will never be overwritten by plugin updates!
    <br>
    Fragments created or changed by the user will get a #user# at 
    the end of their names.  
    ")
$-
$+
SetVar(fdb_picture, 
    "
    Displays a picture of the fragment. User defined fragments 
    only have pictures if the user provided one.
    <br>
    Click on the picture to display a magnified version of the picture.
    ")
$-
$+
SetVar(fdb_props, 
    "Define PART, free variables (FVAR) and the occupancy here.
    <br>
    A free variable of 3 and an occupancy of 1 means 31.0 in SHELXL notation. 
    -31.0 On the other hand is set with a free variable of -3. The corresponding free
    variable is assigned automatically.
    <br>
    <br>
    All parameters will be displayed simultaneously through atomic labels.")
$-
$+
SetVar(fdb_resi, 
    "
    Define *residue number* and *residue class*. 
    Usually it is not necessary to change anything here.
    <br>
    To *Disable* residues, choose residue number *0*.
    <br>
    The residue number must be unique. The plugin automatically chooses the next 
    unused residue number. So it is best to leave it untouched. The residue class 
    has to start with a letter and can be up to four characters. Usually, 
    the class provided by the database is sufficient.
    <br>
    ~DFIX~
    <br> 
    The supplied fragment normally has predefines restraints like
    SADI, FLAT and others. 
    *DFIX* Generates DFIX/DANG restraints from the geometry of the fragment and 
    replaces the predefined restraints.
    <br>
    ~Invert~
    <br>
    Inverts the coordinates of the fragment. Useful to fit the inverted geometry 
    of the fragment.
    ")
$-
$+
SetVar(fdb_fit, 
    "~Fit!~
    <br> 
    The button *Fit!* starts the fit of the Fragment into the structure. 
    <br>
    ~Edit~
    <br>
    Edit or create new fragments:
    <br>
    *Change Picture:* 
    Select a picture for the fragment. Use at least 600dpi pictures.
    <br>
    *Drawstyle:* 
    Save a style file for chemdraw to draw molecular pictures that look 
    the same as the predefined.
    <br>
    *Name:* 
    Name of the fragment
    <br>
    *Unit cell:* 
    Cell parameters of the structure, where the fragment comes from. 
    Use 1 1 1 90 90 90 for cartesian coordinates. The cell constants and the 
    coordinates are converted into Cartesian coordinates during the adding to 
    the database.
    <br>
    *Use selected atoms:* 
    Uses the selected atoms for the Atoms field and creates a picture from the 
    fragment.
    <br>
    *Atoms:* 
    insert atoms here like O2  8  1.3984  -0.3778   0.4922. You can also 
    directly copy atoms from SHELX files or copy coordiinates from Avogadro. 
    http://avogadro.cc/
    <br>
    *Restraints:* 
    Type any SHELX compatible restraint here (except SAME). 
    The length of a line is unlimited.
    <br>
    *Residue:* 
    Define the residue class of the fragment (up to four characters, the first has to be a letter). 
    <br>
    ~No Restraints~
    <br>
    No restraints will be applied to the fitting fragment.
    <br>
    ~Replace Mode~
    <br>
    If enabled, all atoms inside PART 0 lying in a radius of 1.22 A around the 
    atoms of the fitted fragment will be deleted. This is particular useful to 
    replace atoms of a disordered structure just solved using SHELXT. 
    It will not delete atoms in different PARTs than PART 0. 
    ")
$-
$+
SetVar(results, 
    "~Results~
    <br> 
    This table shows the list of the most disagreeable restraints (in case there are some). 
    A click on the respective line opens the editor window to adjust the restraints values.
    <br>
    The long list shows ALL restraints and the short list only the most disargreeable ones.
    <br>
    The error of a parameter should generally not be higher than 3sigma. A higher 
    value means that the assumption of the target value originating from 
    general observations is not met. The reason for this can be either, for 
    example, a distorted molecular geometry like a bend aromatic ring or 
    systematic errors in the data.
    <br>
    <br>
    Disagreeable restraints will be highlighted in yellow if the error is above 
    2.5sigma. They will be highlighted in red if the error is above 
    3.5sigma. 
    ")
$-

<!-- #include tool-top gui/blocks/tool-top.htm;image=#image;onclick=#onclick;1; -->


<!-- #include tool-row-help gui/blocks/tool-row-help.htm;name=Fragment_chooser;help_ext=Fragment Chooser;helpTxt=$GetVar(fdb_chooser);1; -->
<!--
  <td halign='left' width='16%'>
    <b>%Fragment:%</b> 
  </td> -->
  <td VALIGN='center' ALIGN='left' colspan=1 width='85%'>
      <input
        type='combo'
        name="LIST_FRAGMENTS"
        width="100%"
        height="$GetVar(HtmlComboHeight)"
        bgcolor="spy.GetParam(gui.html.input_bg_colour)"
        items='spy.FragmentDB.list_fragments()'
        value='select or search fragments here'
        onenter='html.SetValue(~name~, "")'
        onchange="spy.SetParam(fragment_DB.fragment.fragId, html.GetValue(~name~))>>spy.FragmentDB.init_plugin()"
        onreturn="spy.FragmentDB.search_fragments(html.GetValue(~name~))"
        readonly="False"
        manage="False" >
  </td>
  <td align='right' width='10%'>
  $spy.MakeHoverButton('small-reset@bitmap', 'html.SetItems('LIST_FRAGMENTS', spy.FragmentDB.list_fragments())>>spy.fragmentDB.clear_mainvalues()')
  </td>

<!-- #include row_table_off gui/blocks/row_table_off.htm;1; -->

<!-- #include tool-row-help gui/blocks/tool-row-help.htm;name=Fragment_picture; help_ext=Fragment picture;helpTxt=$GetVar(fdb_picture);1; -->

  <td width="100%" align="center">
  <a target="" href="spy.FragmentDB.display_large_image()"> 
  $spy.fragmentdb.imagedisp('FDBMOLEPIC')
  </a>
  </td>

<!-- #include row_table_off gui/blocks/row_table_off.htm;1; -->


<!-- #include tool-row-help gui\blocks\tool-row-help.htm;name='FRAG_FVAR_1';help_ext=Define Properties;helpTxt=$GetVar(fdb_props);1 -->

  <td width='10%' align='left'><b>%PART:%</b>
  </td>
  <td align='right' width='12%'>
    <font size="$GetVar('HtmlFontSizeControls')">
      <input
        type="spin"
        name="FRAGMENT_PART"
        width="100%"
        height="$GetVar('HtmlSpinHeight')"
        max='99'
        min='-99'
        bgcolor="spy.GetParam(gui.html.input_bg_colour)"
        value="spy.GetParam(fragment_DB.fragment.frag_part)"
        onchange='spy.SetParam(fragment_DB.fragment.frag_part, html.GetValue(~name~))>>labels -p '
      >
    </font>
  </td>

  <td width='22%' align="right"><b>%Free Variable:%</b>
  </td>
  <td align='left' width='13%'>
    <font size="$GetVar('HtmlFontSizeControls')">
      <input
        type="spin"
        name="FRAG_FVAR"
        width="100%"
        height="$GetVar('HtmlSpinHeight')"
        max='99'
        min='-99'
        bgcolor="spy.GetParam(gui.html.input_bg_colour)"
        value="spy.GetParam(fragment_DB.fragment.frag_fvar)"
        onchange='spy.SetParam(fragment_DB.fragment.frag_fvar, html.GetValue(~name~))>>labels -v>>
                  spy.FragmentDB.get_fvar_occ()'
      >
    </font>
  </td>

  <td width='18%' align='right'><b>%Occupancy:%</b>
  </td>
  <td align='right' width='10%'>
    <font size="$GetVar('HtmlFontSizeControls')">
    <input
      type="text"
      height="$GetVar('HtmlInputHeight')"
      width="100%"
      bgcolor="$GetVar('HtmlInputBgColour')"
      name = "FRAG_OCCUPANCY"
      value = "spy.GetParam(fragment_DB.fragment.frag_occ)"
      min='-4'
      max='4'
      onchange='spy.FragmentDB.set_occu(html.GetValue(~name~))>>labels -o>>
                spy.FragmentDB.get_fvar_occ()'
    >
    </font>
  </td>
  <td width='1%' align='left'><b>=></b><td>
    <td width='10%' align="left"><font color="black"> 
    <input
    type="text" 
    name="FVAROCC"
    height="$GetVar('HtmlInputHeight')"
    value="spy.GetParam('fragment_DB.fragment.fvarocc')"
    bgcolor="$GetVar(HtmlTableBgColour)"
    fgcolor="$GetVar(HtmlFontColour)"
    width="100%" >
  </font>
  </td>

<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->

<!-- #include tool-row-help gui\blocks\tool-row-help.htm;name='Residues';help_ext=Residue definition;helpTxt=$GetVar(fdb_resi);1 -->

  <td width='24%' align='left'>
   <b>%Use a residue:%</b>
  </td>
  <td width='12%' align='right'>
      <font size="$GetVar('HtmlFontSizeControls')">
      $+
      html.Snippet("gui/snippets/input-checkbox",
      "name=RESIDUE",
      "checked=spy.SetParam(fragment_DB.fragment.resinum, spy.FragmentDB.find_free_residue_num())",
      "onclick=spy.SetParam('fragment_DB.fragment.resinum', 0)"
      )
      $- 
      <!--
      <input
        type="spin"
        name="RESIDUE"
        width="100%"
        height="$GetVar('HtmlInputHeight')"
        max='99'
        min='0'
        bgcolor="spy.GetParam(gui.html.input_bg_colour)"
        value="spy.SetParam(fragment_DB.fragment.resinum, spy.FragmentDB.find_free_residue_num())"
        onchange="spy.FragmentDB.set_resinum(html.GetValue('~name~'))>>labels -rn"
      >
      -->
      </font>
  </td>
  
  <td width='22%' align='right'>
  <b>%Residue Class:%</b>
  </td>
  <td width='5%' align='right'>
    <font size="$GetVar('HtmlFontSizeControls')">
    <input
      type="text"
      align="right"
      height="$GetVar('HtmlInputHeight')"
      width="100%"
      bgcolor="$GetVar('HtmlInputBgColour')"
      name = "RESIDUE_CLASS"
      value = ""
      onchange='spy.FragmentDB.set_resiclass(html.GetValue(~name~), RESIDUE_CLASS)>>labels -rc'
    >
    </font>
  </td>
  
  <td width='10%' align='right'>
    <b>%Invert:%</b>
  </td>
    <td align='left' width='4%'>
    $+
    html.Snippet("gui/snippets/input-checkbox",
    "name=invert",
    "checked=spy.GetParam('fragment_DB.fragment.invert')",
    "onclick=spy.SetParam('fragment_DB.fragment.invert', html.GetState('~name~'))"
    )
    $- 
    </td>
  
  <td width='15%' align='right'>
    <b>%calc. DFIX:%</b>
  </td>
    <td align='right' width='4%'>
    $+
    html.Snippet("gui/snippets/input-checkbox",
    "name=dfixornot",
    "checked=spy.GetParam('fragment_DB.fragment.use_dfix')",
    "onclick=spy.SetParam('fragment_DB.fragment.use_dfix', html.GetState('~name~'))"
    )
    $-
  </td>

<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->


<!-- #include tool-row-help gui/blocks/tool-row-help.htm;name=Buttons; help_ext=Fit the Fragment;helpTxt=$GetVar(fdb_fit);1; -->

  <td  align='left'>
    $spy.MakeHoverButton('small-Fit!@bitmap', 'spy.FragmentDB.fit_db_fragment()')
    &nbsp;
    $spy.MakeHoverButton('small-Edit@bitmap', 'spy.FragmentDB.open_edit_fragment_window()')
  </td>
  <td  align='right'><b>No Restraints:</b></td>
  <td align='left' width='4%'>
    $+
    html.Snippet("gui/snippets/input-checkbox",
    "name=ROFF",
    "checked=spy.GetParam('fragment_DB.fragment.roff')",
    "onclick=spy.SetParam('fragment_DB.fragment.roff', html.GetState('~name~'))"
    )
    $- 
  </td>

  <td  align='right'><b>Rigid Group:</b></td>
  <td align='left' width='4%'>
    $+
    html.Snippet("gui/snippets/input-checkbox",
    "name=RIGID",
    "checked=spy.GetParam('fragment_DB.fragment.rigid')",
    "onclick=spy.SetParam('fragment_DB.fragment.rigid', html.GetState('~name~'))"
    )
    $- 
  </td>

  <td  align='right'><b>Replace Mode:</b></td>
  <td align='left' width='4%'>
    $+
    html.Snippet("gui/snippets/input-checkbox",
    "name=REPLACE",
    "checked=spy.GetParam('fragment_DB.fragment.replace')",
    "onclick=spy.SetParam('fragment_DB.fragment.replace', html.GetState('~name~'))"
    )
    $- 
  </td>

<!-- #include row_table_off gui/blocks/row_table_off.htm;1; -->

<!-- #include tool-row-help gui/blocks/tool-row-help.htm;name=results; help_ext=Display Results;helpTxt=$GetVar(results);1; -->
  $spy.FragmentDB.results()
<!-- #include row_table_off gui/blocks/row_table_off.htm;1; -->

<!-- #include tool-footer gui/blocks/tool-footer.htm;colspan=2;1; -->


